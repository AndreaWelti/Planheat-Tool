import os, shutil
import unittest
from nose.plugins.attrib import attr
from nose.tools import assert_in, assert_false, assert_true
import logging
from ...optimizer.DHCOptimizer import DHCOptimizer


@attr('manual_design')
class TestManualDesign(unittest.TestCase):

    def setUp(self):
        file_dir = os.path.dirname(__file__)
        self.results_dir = os.path.join(file_dir, "results/")
        self.data_dir = os.path.join(file_dir, "../../data/Antwerp_01/")
        if not os.path.exists(self.results_dir):
            os.mkdir(self.results_dir)

    def tearDown(self):
        shutil.rmtree(self.results_dir)


    def test_run_STP(self):
        district_shape = os.path.join(self.data_dir, "antwerp_01_shape.shp")
        # buildings
        buildings_path = os.path.join(self.data_dir, "antwerp_01_buildings.shp")
        marked_buildings = {'5321187.0', '5321165.0', '5321099.0', '5326321.0', '5321218.0', '5321219.0', '3737065.0',
                            '5326308.0', '3736531.0', '5326263.0', '5321207.0', '3737043.0', '3736950.0', '3737006.0',
                            '5321186.0', '5321152.0', '3736521.0', '3736965.0', '5321145.0', '3736949.0'}
        excluded_streets = {}#('4425526631', '5868786923'), ('5344904184', '276785748'), ('4935695474', '4935695470'),
        #                     ('4425526631', '4379660337'), ('221471611', '221470334'), ('195585963', '205458506'),
        #                     ('4241948344', '1904622108'), ('205466281', '276785748'), ('1904589710', '220727141'),
        #                     ('370626895', '370800156'), ('4425526639', '4379647009'), ('220734940', '206137275'),
        #                     ('4241948344', '4376546422'), ('220706669', '4878471829'), ('237768189', '205465493'),
        #                     ('655344485', '655344484'), ('370626895', '370628404'), ('197762183', '27307067'),
        #                     ('196191118', '195585878'), ('4241948312', '4379647009'), ('220729562', '220731035'),
        #                     ('220739268', '203379815'), ('217754032', '217754302'), ('217746618', '217746617'),
        #                     ('260791188', '195752799'), ('4246205430', '220724162'), ('26522010', '27307038'),
        #                     ('220740583', '252944688'), ('1904589682', '220731035'), ('221472730', '221481097'),
        #                     ('4425526639', '4814057233'), ('195585958', '655344484'), ('655344486', '655344483'),
        #                     ('370795115', '4379660340'), ('203379814', '221110341'), ('195585960', '195585959'),
        #                     ('1904589682', '1904589676'), ('280716799', '280716814'), ('4246205430', '206137435'),
        #                     ('197762184', '247680546'), ('1904589718', '549920844'), ('4376546422', '4379660337'),
        #                     ('205466985', '237770308'), ('223863059', '217765891'), ('221080812', '220725268'),
        #                     ('237768189', '276785748'), ('26522084', '205465493'), ('223861924', '208521768'),
        #                     ('221472730', '206137273'), ('220734940', '221472730'), ('208521768', '217765891'),
        #                     ('26522035', '237774592'), ('260791188', '26152756'), ('4886011299', '4890147492'),
        #                     ('206105851', '206137046'), ('4241948319', '4241948312'), ('549920844', '221110341'),
        #                     ('252944688', '203379815'), ('370628404', '26152755'), ('206105528', '206137046'),
        #                     ('2621468320', '27307035'), ('195585960', '195614287'), ('217762101', '217762857'),
        #                     ('370626895', '4379660340'), ('195585947', '655344483'), ('260791138', '280717117'),
        #                     ('260791138', '26152755'), ('195585963', '195585960'), ('1904589676', '221476998'),
        #                     ('6125781022', '4379647011'), ('208521490', '208521768'), ('26522035', '2621468320'),
        #                     ('195752799', '195585880'), ('197759332', '195614287'), ('195732891', '195585880'),
        #                     ('217751485', '247680545'), ('220724162', '4241948310'), ('205465493', '197762186'),
        #                     ('220724162', '220725268'), ('221472727', '221481097'), ('195585957', '59119524'),
        #                     ('3255985140', '1085435886'), ('203379820', '1904622108'), ('280716705', '370799842'),
        #                     ('220736868', '221482135'), ('280716799', '196191116'), ('59119524', '247370288'),
        #                     ('237768189', '237770308'), ('4810665864', '221470334'), ('4241948335', '4241948328'),
        #                     ('205468416', '237770308'), ('217753550', '217754032'), ('203379820', '1086546991'),
        #                     ('370799842', '370800156'), ('197759332', '197759328'), ('195732891', '195585879'),
        #                     ('220734940', '221482135'), ('220740583', '4860674446'), ('195585957', '195590767'),
        #                     ('195732891', '370631286'), ('206105851', '205456395'), ('2616411596', '26152756'),
        #                     ('220727141', '220725268'), ('280716705', '196191116'), ('217750806', '197762186'),
        #                     ('26152754', '4376546422'), ('4425526631', '4814057221'), ('237771010', '616237154'),
        #                     ('205465493', '205466985'), ('220727144', '220731035'), ('26522084', '27307067'),
        #                     ('4379660340', '4379660337'), ('217753550', '217760949'), ('195585947', '195585926'),
        #                     ('4144373849', '205458506'), ('205466985', '237771010'), ('5344904184', '217750806'),
        #                     ('237774592', '616236167'), ('197764997', '197759332'), ('307694556', '247370540'),
        #                     ('208521490', '206137046'), ('220740583', '220739268'), ('195585926', '5512180516'),
        #                     ('220735931', '220736868'), ('27307067', '27307035'), ('2000785683', '220689674'),
        #                     ('252944688', '286307329'), ('195585967', '280717117'), ('280717118', '370799842'),
        #                     ('220689674', '206137435'), ('286307135', '286307070'), ('223850989', '203379820'),
        #                     ('221471611', '286307070'), ('221476998', '221470334'), ('206105528', '220706669'),
        #                     ('1904622108', '1904622081'), ('195585877', '280716814'), ('220735931', '221470334'),
        #                     ('196191113', '26152754'), ('26522010', '27307043'), ('237771010', '27307044'),
        #                     ('237759956', '4886011299'), ('195585959', '195585958'), ('4814057235', '4241948311'),
        #                     ('3255985140', '197762183'), ('217762101', '217760949'), ('247370540', '4379660337'),
        #                     ('195590767', '195614287'), ('217746616', '26522181'), ('217754032', '217746617'),
        #                     ('237759956', '247370288'), ('221087464', '220729562'), ('1904589718', '1904589710'),
        #                     ('247680597', '26522181'), ('206137291', '217759774'), ('2621468320', '27307043'),
        #                     ('26522035', '27307044'), ('217762101', '217759774'), ('4878471830', '4878471829'),
        #                     ('206137291', '205456395'), ('4379647011', '4379647010'), ('220735931', '4935695470'),
        #                     ('217746617', '217746616'), ('220729562', '220725268'), ('224405647', '27307039'),
        #                     ('217755947', '217760949'), ('307694556', '26152756'), ('4814057235', '4379647011'),
        #                     ('26152754', '1904622108'), ('59119524', '195585947'), ('2893378503', '4144373849'),
        #                     ('280717118', '26152755'), ('307694556', '370628404'), ('223814924', '221476998'),
        #                     ('4241948335', '6125781022'), ('195585963', '195585878'), ('195585878', '280716814'),
        #                     ('260791138', '370631286'), ('247680597', '247680546'), ('655344485', '195585879'),
        #                     ('195585877', '4144373849'), ('195585926', '655344486'), ('4810665864', '286307070'),
        #                     ('280716799', '196191118'), ('280716705', '26152754'), ('59119529', '195614287'),
        #                     ('59119562', '197764997'), ('1904589710', '220727144'), ('4241948342', '4241948338')}
                            # ('206137291', '217754032'), ('217746616', '247680545'), ('217753550', '217745866'),
                            # ('616236167', '616237154'), ('220718913', '220689674'), ('203379815', '203379814'),
                            # ('220718913', '4878471829'), ('26522010', '224405647'), ('27307044', '27307035'),
                            # ('195585958', '195585957'), ('206137291', '208521490'), ('59119529', '59119524'),
                            # ('4379647011', '4379647009'), ('206137273', '217765891'), ('260791188', '260791113'),
                            # ('220718913', '221080812'), ('2616411561', '195585880'), ('1904589682', '4935695470'),
                            # ('4241948312', '4241948311'), ('4425526639', '5868786923'), ('237766988', '616236167'),
                            # ('2000785683', '221080812'), ('195585879', '280717117'), ('4241948311', '4241954927'),
                            # ('370628404', '370631289'), ('195585967', '370799842'), ('221482135', '221481097'),
                            # ('280717118', '280717117'), ('195585967', '196191118'), ('220740583', '221476998'),
                            # ('4379660337', '4379647010'), ('237766988', '616237154'), ('247680597', '27307039'),
                            # ('221472727', '286307135'), ('220727144', '220739268'), ('4886011299', '237766988'),
                            # ('26522084', '27307035'), ('26522181', '205456395'), ('220727141', '549920844'),
                            # ('195585959', '195590767'), ('655344486', '655344485'), ('195585879', '195585878'),
                            # ('206137275', '206105528'), ('4241948327', '6125781022'), ('4241948310', '4241954927'),
                            # ('260791113', '370631289'), ('2616411596', '247370540'), ('205468416', '247370288'),
                            # ('205458507', '205458506'), ('223850989', '223852206'), ('4814057235', '4241948344'),
                            # ('4376546422', '370800156'), ('224405647', '197762183'), ('4241948338', '4241948335'),
                            # ('4241948310', '221110341'), ('247680546', '247680545'), ('1635630583', '197764997'),
                            # ('221472727', '4810665864'), ('217751485', '217750806'), ('1904589676', '220727144'),
                            # ('223850989', '286307329'), ('1904589718', '203379814'), ('197762184', '197762186'),
                            # ('4241954927', '6125781022'), ('2616411561', '5512180516'),
                            # ('4241948344', '4379647010'), ('27307038', '27307039'), ('220736868', '4935695468'),
                            # ('370631289', '370631286'), ('655344484', '655344483'), ('206137275', '208521490'),
                            # ('237759956', '237770308'), ('3255985140', '197762184'), ('4246205430', '2000785683'),
                            # ('221599316', '205466281'), ('205468416', '59119529'), ('205466281', '59119529')}

        old_network_buildings = {'5326305.0', '3736216.0', '3736557.0', '3736620.0', '5321162.0', '5321174.0',
                                 '3736564.0', '5526900.0', '3736736.0'}
        old_network_streets = {('321429208', '290387192'), ('1899087902', '290387192'), ('223842739', '290387192'),
                               ('321429208', '197759289'), ('197759280', '197759289'), ('290384108', '290387192')}

        dhc_opt = DHCOptimizer(DHCOptimizer.STP, district=district_shape,
                               buildings_file_path=buildings_path,
                               marked_buildings=marked_buildings,
                               excluded_streets=excluded_streets,
                               old_network_streets=old_network_streets,
                               old_network_buildings=old_network_buildings)

        dhc_opt.result_dir = self.results_dir

        dhc_opt.logger = logging.getLogger()
        dhc_opt.logger.setLevel(logging.INFO)
        stream_handler = logging.StreamHandler()
        formatter = logging.Formatter('%(asctime)s :: %(name)s :: %(levelname)s :: %(message)s')
        stream_handler.setFormatter(formatter)
        stream_handler.setLevel(logging.DEBUG)
        dhc_opt.logger.addHandler(stream_handler)

        dhc_opt.run()

        g = dhc_opt.network_optimizer.optimization_graph

        for b in marked_buildings:
            assert_in(b, g.nodes, "A marked building is not in the solution graph")

        for e in excluded_streets:
            assert_false(g.has_edge(e[0], e[1]), "An excluded street is in the optimization graph")

        for b in old_network_buildings:
            assert_in(b, g.nodes, "An existing building is not in the solution graph")



