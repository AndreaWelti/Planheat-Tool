# -*- coding: utf-8 -*-
"""
/***************************************************************************
 PlanningAndSimulationModulesDialog
                                 A QGIS plugin
 Planning_And_Simulation_Modules
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2019-04-16
        git sha              : $Format:%H$
        copyright            : (C) 2019 by softeco
        email                : eglantina.metani@softeco.it   daniele.bonventre@softeco.it
 ***************************************************************************/
"""

import os
import os.path


from PyQt5 import uic
from PyQt5.QtGui import QPixmap
from PyQt5 import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'ui', 'planning_and_simulation_modules_dialog_base.ui'))


class PlanningAndSimulationModulesDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(PlanningAndSimulationModulesDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

        mypix = QPixmap(os.path.join(os.path.dirname(os.path.realpath(__file__)), "PlanHeatPrincipal.png"))
        self.label_3.setPixmap(mypix)
